{
  "extends": ["@grafana/eslint-config", "plugin:react/recommended", "airbnb"],
  "env": {
    "jest/globals": true,
    "browser": true
  },
  "root": true,
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx"]
      }
    }
  },
  "plugins": ["react-hooks", "jest"],
  "rules": {
    "no-restricted-imports": 0,
    "react/jsx-curly-brace-presence": ["error"],
    "react/jsx-boolean-value": ["error"],
    "react/prop-types": [0],
    "react/display-name": [0],
    "quotes": ["error", "single"],
    "max-len": ["error", { "code": 110 }],
    "import/extensions": [0],
    "react/jsx-filename-extension": [0],
    "prettier/prettier": [0],
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": true, "optionalDependencies": false, "peerDependencies": false }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "only-multiline",
        "objects": "only-multiline",
        "imports": "only-multiline",
        "exports": "only-multiline",
        "functions": "only-multiline"
      }
    ],
    // We need spread to create HOCs
    "react/jsx-props-no-spreading": [0],
    "import/prefer-default-export": [0],
    "import/no-unresolved": [0],
    // no-unused-vars doesn't work with typescript
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    // We use a lot of snake case variables in code interacting with API
    "camelcase": [0],
    // It's more convinient to declare big helpers functions below the main method
    "no-use-before-define": [0],
    // Don't need these
    "jsx-a11y": [0],
    "jsx-a11y/anchor-is-valid": [0],
    "jsx-a11y/click-events-have-key-events": [0],
    "jsx-a11y/no-static-element-interactions": [0],
    "jsx-a11y/label-has-associated-control": [0],
    // ENABLE LATER
    "max-classes-per-file": [0],
    "no-shadow": [0],
  }
}
